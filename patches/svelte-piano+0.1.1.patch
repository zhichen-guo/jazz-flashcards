diff --git a/node_modules/svelte-piano/dist/Instrument.js b/node_modules/svelte-piano/dist/Instrument.js
index 01b1397..8514a18 100644
--- a/node_modules/svelte-piano/dist/Instrument.js
+++ b/node_modules/svelte-piano/dist/Instrument.js
@@ -1,4 +1,5 @@
-import { Sampler, PingPongDelay, Reverb, Frequency } from 'tone';
+//import { Sampler, PingPongDelay, Reverb, Frequency } from 'tone';
+import * as Tone from 'tone';
 import { log } from 'fractils';
 import { DEV } from 'esm-env';
 const salamander = {
@@ -40,7 +41,7 @@ export class Instrument {
     keyboard;
     static count = 0;
     selectedInstrument = 'electric';
-    sampler = new Sampler({
+    sampler = new Tone.Sampler({
         ...Object.fromEntries(Object.entries(instruments[this.selectedInstrument])),
         onload: () => {
             this.sampler.volume.value = -6;
@@ -51,12 +52,12 @@ export class Instrument {
     });
     keydown;
     keyup;
-    pingpong = new PingPongDelay({
+    pingpong = new Tone.PingPongDelay({
         wet: 0.1,
         delayTime: 0.25,
         feedback: 0.5,
     });
-    reverb = new Reverb({
+    reverb = new Tone.Reverb({
         wet: 0.3,
         decay: 10,
         preDelay: 0.01,
@@ -69,7 +70,7 @@ export class Instrument {
         if (this.keyboard.onKeyDown)
             this.keydown = this.keyboard.onKeyDown.subscribe((note) => {
                 const transposition = this.keyboard.state.octave * 12;
-                const midiNote = Frequency(note.name).transpose(transposition).toFrequency();
+                const midiNote = Tone.Frequency(note.name).transpose(transposition).toFrequency();
                 this.sampler.triggerAttack(midiNote, '+0.01', note.velocity / 127);
             });
         if (this.keyboard.onKeyUp)
